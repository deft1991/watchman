name: 'Build and Push Prod'

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get next version
        uses: reecetech/version-increment@2023.4.1
        id: version
        with:
          scheme: semver
#          The digit to increment, either major, minor or patch, ignored if scheme == calver
          increment: patch

      - name: Build the Docker image
#        run: docker build -t deft1991/altosai:v.${{ secrets.MAJOR }}.${{ secrets.MINOR }} -t deft1991/altosai:latest -f docker/Dockerfile .
        run: docker build -t deft1991/altosai:v.${{ steps.version.outputs.version }} -t deft1991/altosai:latest -f docker/Dockerfile .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        run: docker image push --all-tags deft1991/altosai

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: deft1991/altosai

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # TODO: After recreating the ec2 instance, we need add a new ssh key for this job and update the secrets
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      # Login to ec2 and deploy the new images
      - name: Login to ec2 and deploy the new images
        uses: appleboy/ssh-action@master
        with:
          host: '3.17.187.81'
          username: cicd-user
          key: ${{ secrets.EC2_KEY_PROD }}
          port: 22
          script: |
            cd /home/cicd-user
            sed -i "s/IMAGE_TAG/${{ steps.meta.outputs.tags }}/g" docker-compose.yml
            docker rmi $(docker images -q)
            docker-compose pull
            docker-compose up -d
